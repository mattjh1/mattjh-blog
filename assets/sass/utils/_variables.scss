@use "hugo:vars" as h;
@use "sass:map";

// Nord Color Palette
$nord0: #2e3440; // Polar Night - dark background
$nord1: #3b4252;
$nord2: #434c5e;
$nord3: #4c566a; // used for borders and dividers

$nord4: #d8dee9; // Snow Storm - light foreground
$nord5: #e5e9f0;
$nord6: #eceff4; // lightest, good for backgrounds

$nord7: #8fbcbb; // Frost - secondary blue
$nord8: #88c0d0; // Frost - primary blue
$nord9: #81a1c1;
$nord10: #5e81ac;

$nord11: #bf616a; // Aurora - red
$nord12: #d08770; // orange
$nord13: #ebcb8b; // yellow
$nord14: #a3be8c; // green
$nord15: #b48ead; // purple

// General Semantic Variables
$backgroundDarker: $nord0;
$backgroundDark: $nord1;
$black: $nord2;
$white: $nord5;
$whiter: $nord6;

$fontHeader: "Hack", "Consolas", "Lucida Console", "DejaVu Sans Mono",
  "Courier New", monospace;
$fontParagraph: "Open Sans", sans-serif;
$fontCode: $fontHeader;

$breakLarge: 992px;
$width: 760px;

// Primary color mapping (optional but convenient)
$primary-colors: (
  "blue": $nord8,
  "orange": $nord12,
  "green": $nord14,
  "red": $nord11,
);

// Mixin to set primary color dynamically
@mixin primary-color {
  @if map.has-key($primary-colors, h.$color) {
    color: map.get($primary-colors, h.$color);
  } @else {
    color: h.$color;
  }
}
